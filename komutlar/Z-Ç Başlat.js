const ms = require('ms');

exports.run = async (client, message, args) => {

    if(!message.member.hasPermission('MANAGE_MESSAGES')){
        return message.channel.send(':x: Bu Komutu Kullanmak ƒ∞√ßin "Mesajlarƒ± Y√∂net" Yetkisine Sahip Olman Gerekiyor.');
    }

    let giveawayChannel = message.mentions.channels.first();
    if(!giveawayChannel){
        return message.channel.send(':x: L√ºtfen Bir Kanal Etiketle!').then(m => m.delete({timeout: 5000, reason:"It had to be done"}));
                message.delete({timeout: 6000, reason:"It had to be done"});
    }

    let giveawayDuration = args[1];
    if(!giveawayDuration || isNaN(ms(giveawayDuration))){
        return message.channel.send(':x: Ge√ßerli bir s√ºre belirtmeniz gerekiyor!').then(m => m.delete({timeout: 5000, reason:"It had to be done"}));
                message.delete({timeout: 6000, reason:"It had to be done"});
    }

    let giveawayNumberWinners = args[2];
    if(isNaN(giveawayNumberWinners) || (parseInt(giveawayNumberWinners) <= 0)){
        return message.channel.send(':x: Ge√ßerli bir kazanan sayƒ±sƒ± belirtmeniz gerekiyor!').then(m => m.delete({timeout: 5000, reason:"It had to be done"}));
                message.delete({timeout: 6000, reason:"It had to be done"});
    }

    let giveawayPrize = args.slice(3).join(' ');
    if(!giveawayPrize){
        return message.channel.send(':x: Ge√ßerli bir √∂d√ºl belirtmelisiniz!').then(m => m.delete({timeout: 5000, reason:"It had to be done"}));
                message.delete({timeout: 6000, reason:"It had to be done"});
    }

    client.giveawaysManager.start(giveawayChannel, {
        time: ms(giveawayDuration),
        prize: giveawayPrize,
        winnerCount: giveawayNumberWinners,
        hostedBy: process.env.hostedBy ? message.author : null,
        messages: {
            giveaway: (process.env.everyoneMention ? "@everyone\n\n" : "")+"üéâüéâ **√áEKƒ∞Lƒ∞≈û** üéâüéâ",
            giveawayEnded: (process.env.everyoneMention ? "@everyone\n\n" : "")+"üéâüéâ **√áEKƒ∞Lƒ∞≈û SONA ERDƒ∞** üéâüéâ",
            timeRemaining: "Kalan s√ºre: **{duration}**!",
            inviteToParticipate: "Katƒ±lmak i√ßin üéâ tepkisine tƒ±klayƒ±n!",
            winMessage: "Tebrikler, {winners}! **{prize}** √ñd√ºl√ºn√º Kazandƒ±n!",
            embedFooter: "√áekili≈ü",
            noWinner: "Giveaway iptal edildi, ge√ßerli katƒ±lƒ±m yok.",
            hostedBy: "√áekili≈üi Yapan: {user}",
            winners: "Kazanan",
            endedAt: "Sona Erdi",
            units: {
                seconds: "saniye",
                minutes: "dakika",
                hours: "saat",
                days: "g√ºn",
                pluralS: false
            }
        }
    });

    message.channel.send(`√áekili≈ü ${giveawayChannel} Kanalƒ±nda Ba≈ülatƒ±ldƒ±!`).then(m => m.delete({timeout: 5000, reason:"It had to be done"}));
                message.delete({timeout: 6000, reason:"It had to be done"});

};

exports.conf = {
  aliases: ['start'],
  permLevel: 0,
};
exports.help = {
  name: 'ba≈ülat',
   description: '√áekili≈üi Ba≈ülatƒ±r.',
  usage: 'ba≈ülat #kanal <S√ºre> <Kazanacak Ki≈üi Sayƒ±sƒ±> <√ñd√ºl Adƒ±>'
};